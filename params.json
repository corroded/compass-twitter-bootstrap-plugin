{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Compass-twitter-bootstrap-plugin","body":"Twitter Bootstrap V2.0 - Compass Plugin\r\n=======================================\r\n\r\nTwitter Bootstrap was created by Mark Otto and Jacob Thornton. See the official site for more info: <http://twitter.github.com/bootstrap/>\r\n\r\n* This plugin is consistent with latest version of Twitter Bootstrap v2.0 as of 2/19/2012.\r\n\r\n---------\r\n\r\nThis plugin adds the Twitter Bootstrap CSS framework to [Compass](http://compass-style.org/).\r\n\r\nInstall\r\n=======\r\n\r\n    gem install compass-twitter-bootstrap-plugin\r\n\r\nCreate a Bootstrap-based Compass Project\r\n========================================\r\n\r\n    compass create -r twitter-bootstrap my_project --using twitter\r\n\r\nOr, If you prefer to use Sass's indentation based syntax:\r\n\r\n    compass create -r twitter-bootstrap my_project --using twitter --syntax sass\r\n\r\nUSAGE\r\n=====\r\n\r\nThis gem was built for semantic grids using only CSS, which means that you don't need the any `span<n>` or `row` class in your markup. The grid will be generated as SASS mixins for your convenience.\r\n\r\nHere are the available mixins:\r\n\r\n##Grid\r\n\r\n* `+row` - make your element a grid column container using this mixin\r\n* `+fluid-row` - make your element a fluid grid column container using this mixin\r\n* `+span(n)` - add n grid columns to your element\r\n* `+offset(n)` - add n empty grid columns to your grid\r\n* `+container` - make your element to a fixed layout of 940px\r\n* `+fluid-container` - make your element a fluid layout for your grids. This implies that you will also be using `+fluid-row` as your grid column container\r\n\r\n##Typography\r\n\r\n* `+text` - will import all the base typography for Bootstrap\r\n\r\n##Tables\r\n\r\n* `+tables` - will import all base table styles for Bootstrap(striped, bordered, etc.)\r\n\r\n##Buttons\r\n\r\n* `+btn` - will add the default button style to the element\r\n* `+btn-primary` - will add the button style based on the primary color set by the variable, `@primary-color`\r\n* `+btn-group` - will make the current element a button group container\r\n\r\nThe following will add button styles based on the associated color set by the variable with the same name:\r\n\r\n* `+btn-info`\r\n* `+btn-success`\r\n* `+btn-warning`\r\n* `+btn-danger`\r\n* `+btn-inverse`\r\n\r\n### Button sizes\r\n\r\n* `+btn-large`\r\n* `+btn-small`\r\n* `+btn-mini`\r\n\r\n##Icons\r\n\r\n`+icons` will import the Icon styles used by Bootstrap as documented here: <http://twitter.github.com/bootstrap/base-css.html#icons>. Use the styles like you would in Bootstrap with the addition of one mixin:\r\n\r\n* `+icon-white` - will give you the inverted (white) icons instead. The mixin was added so you don't have to add an extra icon-white class to your markup.\r\n\r\nTODO\r\n====\r\n\r\n- Add other Bootstrap Default styles and Mixins\r\n- Finish the README\r\n- Add examples to README or in a separate folder","tagline":"A Compass plugin of the Twitter Bootstrap v2"}